<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="15" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="510" started-at="2019-10-14T15:41:37Z" finished-at="2019-10-14T15:41:37Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="510" started-at="2019-10-14T15:41:37Z" finished-at="2019-10-14T15:41:37Z">
      <class name="unittesting.mock.SpyTest">
        <test-method status="PASS" signature="SpyTest()[pri:0, instance:unittesting.mock.SpyTest@402f32ff]" name="SpyTest" duration-ms="407" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SpyTest -->
        <test-method status="PASS" signature="testCallMethodThatIsNotMocked()[pri:0, instance:unittesting.mock.SpyTest@402f32ff]" name="testCallMethodThatIsNotMocked" duration-ms="24" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCallMethodThatIsNotMocked -->
      </class> <!-- unittesting.mock.SpyTest -->
      <class name="unittesting.mock.MockitoVerify">
        <test-method status="PASS" signature="testVerify()[pri:0, instance:unittesting.mock.MockitoVerify@6d8a00e3]" name="testVerify" duration-ms="7" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerify -->
        <test-method status="PASS" signature="testVerifyInOrder()[pri:0, instance:unittesting.mock.MockitoVerify@6d8a00e3]" name="testVerifyInOrder" duration-ms="4" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyInOrder -->
        <test-method status="PASS" signature="testVerifyNoMoreInteractions()[pri:0, instance:unittesting.mock.MockitoVerify@6d8a00e3]" name="testVerifyNoMoreInteractions" duration-ms="1" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyNoMoreInteractions -->
      </class> <!-- unittesting.mock.MockitoVerify -->
      <class name="unittesting.mock.MockitoExampleTest">
        <test-method status="PASS" signature="testCallMethodThatIsNotMocked()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testCallMethodThatIsNotMocked" duration-ms="1" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCallMethodThatIsNotMocked -->
        <test-method status="PASS" signature="testForIOException()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testForIOException" duration-ms="2" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <exception class="java.io.IOException">
            <full-stacktrace>
              <![CDATA[java.io.IOException
	at unittesting.mock.MockitoExampleTest.testForIOException(MockitoExampleTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForIOException -->
        <test-method status="FAIL" signature="testMoreThanOneReturnValue()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testMoreThanOneReturnValue" duration-ms="17" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Hello bug-seeders!] but found [Hello testers!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Hello bug-seeders!] but found [Hello testers!]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at unittesting.mock.MockitoExampleTest.testMoreThanOneReturnValue(MockitoExampleTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoreThanOneReturnValue -->
        <test-method status="PASS" signature="testReturnValueDependentOnMethodParameter()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testReturnValueDependentOnMethodParameter" duration-ms="10" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnValueDependentOnMethodParameter -->
        <test-method status="PASS" signature="testReturnValueInDependentOnMethodParameter()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testReturnValueInDependentOnMethodParameter" duration-ms="1" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnValueInDependentOnMethodParameter -->
        <test-method status="PASS" signature="testSimpleReturnValue()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testSimpleReturnValue" duration-ms="1" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleReturnValue -->
        <test-method status="PASS" signature="testSimpleReturnValue2()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testSimpleReturnValue2" duration-ms="1" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleReturnValue2 -->
        <test-method status="FAIL" signature="testStringMockEquals()[pri:0, instance:unittesting.mock.MockitoExampleTest@548b7f67]" name="testStringMockEquals" duration-ms="1" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <exception class="org.mockito.exceptions.base.MockitoException">
            <message>
              <![CDATA[
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - final or anonymous class]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.base.MockitoException: 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - final or anonymous class
	at unittesting.mock.MockitoExampleTest.testStringMockEquals(MockitoExampleTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.mockito.exceptions.base.MockitoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStringMockEquals -->
      </class> <!-- unittesting.mock.MockitoExampleTest -->
      <class name="unittesting.mock.LoginServiceTest">
        <test-method status="PASS" signature="loginBasic()[pri:0, instance:unittesting.mock.LoginServiceTest@7ac7a4e4]" name="loginBasic" duration-ms="14" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginBasic -->
        <test-method status="PASS" signature="loginBasicFalse()[pri:0, instance:unittesting.mock.LoginServiceTest@7ac7a4e4]" name="loginBasicFalse" duration-ms="1" started-at="2019-10-14T17:41:37Z" finished-at="2019-10-14T17:41:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginBasicFalse -->
      </class> <!-- unittesting.mock.LoginServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
